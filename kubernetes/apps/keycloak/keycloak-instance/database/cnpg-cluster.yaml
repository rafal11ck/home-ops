# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: &name keycloak-database
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: enabled
spec:
  description: 'keycloak database'
  instances: 1
  primaryUpdateStrategy: unsupervised
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5-10
  storage:
    size: 5Gi
    storageClass: ceph-block
  monitoring:
    enablePodMonitor: true
  bootstrap:
    # initdb:
    #   database: keycloak
    recovery:
      source: clusterBackup
      recoveryTarget:
        targetImmediate: true
        backupID: '20250706T00000'
  externalClusters:
    - name: clusterBackup
      barmanObjectStore:
        endpointURL: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc:80
        destinationPath: s3://keycloak-cnpg-bucket/
        s3Credentials:
          accessKeyId:
            name: keycloak-cnpg-bucket
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: keycloak-cnpg-bucket
            key: AWS_SECRET_ACCESS_KEY
  # backup:
  #   retentionPolicy: 1m # 2 months
  #   barmanObjectStore:
  #     endpointURL: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc:80
  #     destinationPath: s3://keycloak-cnpg-bucket/
  #     s3Credentials:
  #       accessKeyId:
  #         name: keycloak-cnpg-bucket
  #         key: AWS_ACCESS_KEY_ID
  #       secretAccessKey:
  #         name: keycloak-cnpg-bucket
  #         key: AWS_SECRET_ACCESS_KEY
  #     # wal:
  #     # compression: gzip
