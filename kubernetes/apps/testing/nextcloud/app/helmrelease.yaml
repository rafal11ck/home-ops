---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 6.6.9
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    deploymentAnnotations:
      reloader.stakater.com/auto: 'true'

    image:
      flavor: fpm-alpine

    # Number of replicas to be deployed
    replicaCount: 1

    ## Allowing use of ingress controllers
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ##
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/hostname: &hostname 'cloud2.${SECRET_DOMAIN}'
        external-dns.alpha.kubernetes.io/target: '${SECRET_PUBLIC_IP}'
        external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
        nginx.ingress.kubernetes.io/proxy-buffering: 'off'
        nginx.ingress.kubernetes.io/proxy-request-buffering: 'off'
        nginx.ingress.kubernetes.io/affinity: cookie
        nginx.ingress.kubernetes.io/enable-cors: 'true'
        nginx.ingress.kubernetes.io/cors-allow-methods: 'GET, HEAD, POST, OPTIONS, PUT, PATCH, DELETE, PROPFIND, MKCOL, REPORT'
        nginx.ingress.kubernetes.io/cors-allow-headers: 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Forwarded-For'
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix

    phpClientHttpsFix:
      enabled: true
      protocol: https

    nextcloud:
      host: 'cloud2.${SECRET_DOMAIN}'

      username: admin
      password: changeme
      ## Use an existing secret
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: nextcloud-username
        passwordKey: nextcloud-password
      update: 0
      # If web server is not binding default port, you can define it
      trustedDomains:
        - cloud2.${SECRET_DOMAIN}
      ## SMTP configuration
      mail:
        enabled: false

      configs:
        ingress.config.php: |-
          <?php
          $CONFIG = array (
            'overwrite.cli.url' => 'https://cloud2.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
          );
        misc.config.php: |-
          <?php
          $CONFIG = array (
            'maintenance_window_start' => 1,
            'default_phone_region' => 'PL',
          );
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.69.0.0/16',
              2 => '10.96.0.0/16',
            ),
            'trusted_domains' => array(
              0 => '127.0.0.1',
              1 => 'cloud2.${SECRET_DOMAIN}',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          );
        redis.config.php: |-
          <?php
            $CONFIG = array (
              'memcache.distributed' => '\OC\Memcache\Redis',
              'memcache.locking' => '\OC\Memcache\Redis',
              'redis' => array(
                'host' => getenv('REDIS_HOST'),
                'port' => getenv('REDIS_HOST_PORT') ?: 6379,
              )
            );

      ## PHP Configuration files
      # Will be injected in /usr/local/etc/php/conf.d for apache image and in /usr/local/etc/php-fpm.d when nginx.enabled: true
      # phpConfigs: {}

      ## Default config files that utilize environment variables:
      # see: https://github.com/nextcloud/docker/tree/master#auto-configuration-via-environment-variables
      # IMPORTANT: Will be used only if you put extra configs, otherwise default will come from nextcloud itself
      # Default confgurations can be found here: https://github.com/nextcloud/docker/tree/master/.config
      defaultConfigs:
        # To protect /var/www/html/config
        .htaccess: true
        # Apache configuration for rewrite urls
        apache-pretty-urls.config.php: false
        # Define APCu as local cache
        apcu.config.php: true
        # Apps directory configs
        apps.config.php: true
        # Used for auto configure database - False cus CNPG Postgre is used instead. Configured in the chart.
        autoconfig.php: false
        # Redis default configuration - False cus DragonflyDB(Redis) is used instead. Configured in the chart.
        redis.config.php: false
        # Reverse proxy default configuration
        reverse-proxy.config.php: true
        # S3 Object Storage as primary storage
        s3.config.php: false
        # SMTP default configuration via environment variables
        smtp.config.php: false
        # Swift Object Storage as primary storage
        swift.config.php: false
        # disables the web based updater as the default nextcloud docker image does not support it
        upgrade-disable-web.config.php: true

      extraEnv:
        - name: REDIS_HOST
          value: nextcloud-memcache.testing.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: '6379'
        - name: REDIS_PASSWORD
          value: ''
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-database-app
              key: password

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: nextcloud-database-app
        usernameKey: user
        passwordKey: password
        hostKey: host
        databaseKey: dbname

    cronjob:
      enabled: true

    persistence:
      # Nextcloud Data (/var/www/html)
      enabled: true
      storageClass: 'ceph-block'
      accessMode: ReadWriteOnce
      size: 5Gi
      nextcloudData:
        enabled: true
        storageClass: 'ceph-block'
        accessMode: ReadWriteOnce
        size: 5Gi

    nginx:
      enabled: true
      config:
        default: true

    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 30
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 30
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
