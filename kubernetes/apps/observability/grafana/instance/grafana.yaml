apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    dashboards: 'grafana'
spec:
  config:
    security:
      admin_user: 'placeholder' # ovveriden by envvar
      admin_password: 'placeholder' # ovveriden by envvar
    analytics:
      check_for_updates: 'false'
      check_for_plugin_updates: 'false'
      reporting_enabled: 'false'
    auth.anonymous:
      enabled: 'true'
      org_id: '1'
      org_name: Main Org.
      org_role: Viewer
    news:
      news_feed_enabled: 'false'
  deployment:
    # Inject dashboards from cofnigmaps https://grafana.github.io/grafana-operator/docs/examples/configmaps_sidecar/readme/
    spec:
      template:
        spec:
          # The volumes for dashboards and provisioning config
          volumes:
            - name: dashboards
              emptyDir: {}
            - name: provisioning-config
              configMap:
                name: provisioning-config
          containers:
            - name: grafana
              env:
                - name: GF_SECURITY_ADMIN_USER
                  valueFrom:
                    secretKeyRef:
                      key: admin-user
                      name: grafana-instance-secret
                - name: GF_SECURITY_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: admin-password
                      name: grafana-instance-secret
              volumeMounts:
                - mountPath: /etc/grafana/provisioning/dashboards
                  name: provisioning-config
                - mountPath: /var/lib/grafana/dashboards
                  name: dashboards
            # This container watches the namespace for configmaps with the `dashboards` label
            # and creates files for all their keys under `FOLDER`
            - image: 'ghcr.io/kiwigrid/k8s-sidecar:1.24.5'
              name: k8s-sidecar
              env:
                - name: LABEL
                  value: 'grafana_dashboard'
                - name: LABEL_VALUE
                  value: '1'
                - name: FOLDER
                  value: /var/lib/grafana/dashboards
                - name: NAMESPACE
                  value: ALL
                - name: RESOURCE
                  value: configmap
              volumeMounts:
                - mountPath: /var/lib/grafana/dashboards
                  name: dashboards

  ingress:
    metadata:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: 'grafana.${SECRET_DOMAIN}'
    spec:
      ingressClassName: internal
      rules:
        - host: grafana.${SECRET_DOMAIN}
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
---
# Provisioning config
apiVersion: v1
kind: ConfigMap
metadata:
  name: provisioning-config
  namespace: observability
data:
  provisioning.yaml: |-
    apiVersion: 1
    providers:
      - name: 'configmap-dashboard-provider'
        orgId: 1
        folder: ''
        folderUid: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: false
        options:
          path: /var/lib/grafana/dashboards
          foldersFromFilesStructure: true
---
# bind the new permissions to the grafana-sa
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sidecar-rolebinding
roleRef:
  kind: ClusterRole
  name: sidecar-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: grafana-sa
    namespace: observability
---
# need to extend the permissions of the Grafana serviceaccount to watch for configmaps
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sidecar-role
rules:
  - apiGroups: ['']
    resources: ['configmaps']
    verbs: ['get', 'watch', 'list']
