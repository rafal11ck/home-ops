---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.26.1-standalone-strict/configmap-v1.json
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config
data:
  bookmarks.yaml: |
    ---
    - Bookmarks:
      - k8s-at-home-search:
        - icon: kubernetes
          href: https://nanne.dev/k8s-at-home-search/
          description: Search KAH HelmReleases
      - onedr0p home-ops:
        - icon: github-light
          href: https://github.com/onedr0p/home-ops
          description: onedr0p HomeOps Repository
      - bjw-s Chart Values:
        - icon: github-light
          href: https://github.com/bjw-s/helm-charts/tree/main/charts/library/common#values
          description: app-template Helm Chart Values
      - NixOS Search:
        - icon: nixos
          href: https://search.nixos.org
          description: Search NixOS Packages and Options

  docker.yaml: |
    ---
  kubernetes.yaml: |
    ---
    mode: cluster
    gateway: true

  services.yaml: |
    - Applications:
      - nextcloud:
          description: Private cloud to store files, chat, manage calendars and contacts
          icon: nextcloud
          app: nextcloud
          name: Nextcloud
          namespace: default
          href: https://cloud.${SECRET_DOMAIN}
          widget:
            type: nextcloud
            url: http://nextcloud.default.svc.cluster.local:8080
            key: '{{HOMEPAGE_VAR_NEXTCLOUD_KEY}}'
            fields: ["activeusers", "freespace"]
          podSelector: app.kubernetes.io/name=nextcloud
      - immich:
          description: Photo and video management
          icon: immich
          app: immich
          name: Immich
          namespace: immich
          href: https://immich.${SECRET_DOMAIN}
          widget:
            type: immich
            version: 2
            fields: ["users", "storage"]
            url: http://immich-server.immich.svc.cluster.local:2283
            key: '{{HOMEPAGE_VAR_IMMICH_KEY}}'
          podSelector:
            app.kubernetes.io/name in (
              machine-learning,
              server
            )
      - grafana:
          description: Observability and data visualization platform
          icon: grafana
          name: Grafana
          app: grafana
          namespace: observability
          href: https://grafana.${SECRET_DOMAIN}
          podSelector: app=grafana
          widget:
            type: prometheusmetric
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            metrics:
              - label: Dashboards
                query: grafana_stat_totals_dashboard

      - alertmanager:
          description: Handles alerts sent by client applications such as the Prometheus server
          icon: alertmanager
          name: Alertmanager
          app: alertmanager
          namespace: observability
          href: https://alertmanager.${SECRET_DOMAIN}
          pod-selector: app.kubernetes.io/name=alertmanager
          widget:
            type: prometheusmetric
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            metrics:
              - label: Alerts active
                query: alertmanager_alerts{state="active"} - 1

      - prometheus:
          description: Metrics and monitoring
          icon: prometheus
          name: Prometheus
          app: prometheus
          namespace: observability
          href: https://prometheus.${SECRET_DOMAIN}
          pod-selector: app.kubernetes.io/name=prometheus
          widget:
            type: prometheus
            url: http://prometheus-operated.observability.svc.cluster.local:9090

      - ceph:
          description: Ceph monitoring and managment
          icon: ceph
          name: Ceph dashboard
          app: ceph
          href: https://rook.${SECRET_DOMAIN}
          namespace: rook-ceph
          pod-selector: app=rook-ceph-mgr,mgr_role=active,rook_cluster=rook-ceph
          widget:
            type: prometheusmetric
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            metrics:
              - label: OSDs in
                query: count(ceph_osd_in)
              - label: OSDs up
                query: count(ceph_osd_up)


      - metricless:
        - Keycloak:
            description: Identity and access management
            icon: keycloak
            name: Keycloak
            app: keycloak
            namespace: keycloak
            href: 'https://auth.${SECRET_DOMAIN}'
            # TODO do better after https://github.com/keycloak/keycloak/issues/41079
            podSelector: app=keycloak
        - Jellyfin:
            description: Media system
            enabled: 'true'
            icon: jellyfin
            app: jellyfin
            name: Jellyfin
            namespace: media
            href: 'https://jellyfin.${SECRET_DOMAIN}'

      - Services:
        - qbittorrent:
            description: BitTorrent client
            enabled: 'true'
            app: qbittorrent
            namespace: media
            icon: qbittorrent
            name: Qbittorrent
            href: 'https://qbittorrent.${SECRET_DOMAIN}'
            widget:
              type: qbittorrent
              url: http://qbittorrent.media.svc.cluster.local:80
              fields: ["download"]
        - echo-server:
          - echo-server:
              name: Echo-server
              app: echo-server
              description: An HTTP and WebSocket server for testing
              href: https://echo-server.${SECRET_DOMAIN}
              namespace: default
              podSelector: app.kubernetes.io/controller=echo-server,app.kubernetes.io/instance=echo-server,app.kubernetes.io/name=echo-server
              icon: mdi-server-network-outline
          - echo-server-sec:
              name: Echo-server
              app: echo-server
              description: OIDC secured echo-server
              href: https://echo-server-sec.${SECRET_DOMAIN}
              namespace: default
              podSelector: app.kubernetes.io/controller=echo-server,app.kubernetes.io/instance=echo-server,app.kubernetes.io/name=echo-server
              icon: mdi-server-network-outline
        - sonarr:
            description: Smart PVR
            icon: sonarr
            app: sonarr
            namespace: media
            name: Sonarr
            href: https://sonarr.${SECRET_DOMAIN}
            widget:
              type: sonarr
              url: http://sonarr.media.svc.cluster.local:80
              key: {{HOMEPAGE_VAR_SONARR_KEY}}

    - Internal:
      - OPNsense:
          href: https://192.168.0.1
          description: Firewall and routing platform
          icon: opnsense
          widget:
            type: opnsense
            url: https://192.168.0.1
            username: {{HOMEPAGE_VAR_OPNSENSE_KEY}}
            password: {{HOMEPAGE_VAR_OPNSENSE_SECRET}}
      - jacektt:
          description: Indexer agragator and cache
          enabled: 'true'
          icon: jackett
          name: Jackett
          app: jackett
          namespace: media
          href: 'https://{{ .Release.Name }}.${SECRET_DOMAIN}'
          widget:
            type: jackett
            url: http://jackett.media.svc.cluster.local:9117

  settings.yaml: |
    ---
    title: Dashboard
    theme: dark
    color: slate
    headerStyle: clean
    target: _blank
    disableUpdateCheck: true
    hideVersion: true
    layout:
      Bookmarks:
        style: row
        columns: 4
      Applications:
        style: row
        columns: 3
        metricless:
          header: false
      Services:
        style: row
        columns: 2
        echo-server:
          style: row
          columns: 2
          header: false
      Internal:
        style: row
        columns: 3
    quicklaunch:
      searchDescription: true
      hideInternetSearch: true
      hideVisitURL: true
  widgets.yaml: |
    ---
    - search:
        provider:
          - google
          - duckduckgo
    - kubernetes:
        cluster:
          show: true
          cpu: true
          memory: true
        nodes:
          show: true
          cpu: true
          memory: true
          showLabel: true
