# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: immich
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 0.9.3
  url: oci://ghcr.io/immich-app/immich-charts/immich
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: immich
  valuesFrom:
    - kind: Secret
      name: immich-app
  values:
    image:
      # renovate: datasource=github-releases depName=immich-app/immich
      tag: v1.135.3
    env:
      REDIS_HOSTNAME: immich-dragonfly.immich.svc
      REDIS_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: immich-dragonfly-secret
            key: password
      DB_HOSTNAME:
        # HACK This will be ignored by immich but chart by default
        # will break if not using builtin postgres
        # so just overwrite ones set by it to correct ones
        valueFrom:
          secretKeyRef:
            name: immich-database-app
            key: host
      DB_USERNAME:
        # HACK This will be ignored by immich but chart by default
        # will break if not using builtin postgres
        # so just overwrite ones set by it to correct ones
        valueFrom:
          secretKeyRef:
            name: immich-database-app
            key: user
      DB_DATABASE_NAME:
        # HACK This will be ignored by immich but chart by default
        # will break if not using builtin postgres
        # so just overwrite ones set by it to correct ones
        valueFrom:
          secretKeyRef:
            name: immich-database-app
            key: dbname
      DB_DATABASE_PASSWORD:
        # HACK This will be ignored by immich but chart by default
        # will break if not using builtin postgres
        # so just overwrite ones set by it to correct ones
        valueFrom:
          secretKeyRef:
            name: immich-database-app
            key: password
      DB_URL:
        valueFrom:
          secretKeyRef:
            name: immich-database-app
            key: uri
      TZ:
        valueFrom:
          secretKeyRef:
            name: immich-app
            key: TZ
    immich:
      metrics:
        enabled: true
      persistence:
        library:
          existingClaim: immich-library
      configuration: # see https://immich.app/docs/install/config-file/
        backup:
          database:
            enabled: true
            keepLastAmount: 14
        ffmpeg:
          acceptedVideoCodecs:
            - av1
          crf: 31
          threads: 2
          preset: slow
          targetAudioCodec: libopus
          targetResolution: '1080'
          targetVideoCodec: av1
          transcode: required
        image:
          fullsize:
            enabled: true
            format: webp
          preview:
            format: webp
            size: 1080
            quality: 85
          thumbnail:
            format: webp
            size: 480
        newVersionCheck:
          enabled: false
        notifications:
          smtp:
            enabled: false
        oauth:
          enabled: true
          autoLaunch: true
          autoRegister: true
          buttonText: Login with Keycloak
          storageLabelClaim: preferred_username
          storageQuotaClaim: immich_quota
          # mobileOverrideEnabled: false
          # mobileRedirectUri: ''
        passwordLogin:
          enabled: false
        storageTemplate:
          enabled: true
          hashVerificationEnabled: true
          template: '{{y}}/{{y}}_{{MM}}_{{dd}}__{{hh}}_{{mm}}_{{filename}}'
    server:
      resources:
        requests:
          cpu: 50m
          memory: 350Mi
        limits:
          cpu: 2500m
    machine-learning:
      persistence:
        cache:
          type: pvc
          existingClaim: immich-machine-learning-cache
      resources:
        requests:
          cpu: 150m
          memory: 900Mi
        limits:
          cpu: 2500m
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: immich-server
  namespace: default
spec:
  minReplicas: 1
  maxReplicas: 3
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 180
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    # should really only be done for the microservices
    # needs https://github.com/immich-app/immich-charts/issues/94
    name: immich-server
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: immich-machine-learning
  namespace: default
spec:
  minReplicas: 1
  maxReplicas: 3
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 180
    scaleDown:
      stabilizationWindowSeconds: 180
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: immich-machine-learning
